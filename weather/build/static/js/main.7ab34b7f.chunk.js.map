{"version":3,"sources":["components/Tempapp.js","App.js","reportWebVitals.js","index.js"],"names":["Tempapp","useState","weather","setweather","cityName","useRef","location","setLocation","submit","setSubmit","useEffect","name","current","value","latitude","longitude","console","log","axios","get","then","res","newWeather","data","navigator","geolocation","getCurrentPosition","position","coords","error","className","main","ref","placeholder","onClick","temp","sys","country","wind","speed","temp_max","pressure","feels_like","temp_min","humidity","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ab34b7f.chunk.js","sourcesContent":["import React, { useEffect, useState,useRef  } from \"react\"; \r\nimport axios from 'axios';\r\nimport './style.css';\r\n// const Tempapp=()=>{\r\n//     const [weather, setweather] = useState(null)\r\n//     const [search,setSearch]=useState(\"Karachi\");\r\n//     useEffect(() => {\r\n//       axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=41e7ed6fb208d067b64d2de9d172b32c`)\r\n//         .then(res => {\r\n//           const newWeather = res.data;\r\n//           console.log(newWeather);\r\n  \r\n//           setweather(newWeather);\r\n//         });\r\n  \r\n//     }, [search]);\r\n//     // const [isBright, setIsBright]=React.useState(false);\r\n//     // const changeState=()=>{\r\n//     //   setIsBright(!isBright)\r\n//     // }\r\n//     return (\r\n//       <div className={ (weather?.weather[0].main =='Rain')? \"rain main_div col-md-5\" :(weather?.weather[0].main =='Thunderstorm')? \"thunderStorm main_div col-md-5\" : (weather?.weather[0].main =='Haze')?\"Haze main_div col-md-5\" :(weather?.weather[0].main =='Clouds')?\"Clear main_div col-md-5\" :(weather?.weather[0].main =='Smoke')? \"Smoke main_div col-md-5\": \"Clear main_div col-md-5\"}>\r\n//         {/* <button onClick={changeState } className=\"Btn\">{ isBright ? \"Dark Mode\" : \"Bright\"}</button>\r\n        \r\n//         { isBright ? <i class=\"fas fa-moon\" onClick={changeState }></i> : <i class=\"fas fa-sun\" onClick={changeState }></i>} */}\r\n//         <h2>Weather App</h2>\r\n//          <div>\r\n//              <div className=\"inputData\">\r\n//                  <input\r\n//                 type=\"search\"\r\n//                 className=\"inputField\"\r\n//                 onChange={(event)=>{\r\n//                     setSearch(event.target.value)\r\n//                 }}/>\r\n//             </div>\r\n//          </div>\r\n//         {\r\n//           (weather !== null) ?\r\n//             <>\r\n//               <div className=''>\r\n\r\n//                   <h1>{weather.name}</h1>\r\n//                   <h4>{weather?.weather[0].main}</h4>\r\n//                   <h2>{weather?.main?.temp}°Cel</h2>\r\n//                   <h4>{weather?.sys?.country}</h4><br/><br/>\r\n//                   <div className=\"row weatherInformatin\">\r\n//                   <div className=\"col-6\">\r\n//                   <p className=\"para\">Wind Speed: {weather?.wind.speed}</p>\r\n//                   <p className=\"para\">Max Temp: {weather?.main?.temp_max}°C</p>\r\n//                   <p className=\"para\">Air Pressure: {weather?.main?.pressure}mbar</p>\r\n//                   </div>\r\n//                   <div className=\"col-6\">\r\n//                   <p className=\"para\">Feels Like: {weather?.main?.feels_like}°C</p>\r\n//                   <p className=\"para\">Min Temp: {weather?.main?.temp_min}°C</p>\r\n//                   <p className=\"para\">Humidity: {weather?.main?.humidity}</p>\r\n//                   </div>\r\n//                   </div>\r\n\r\n//               </div>\r\n//             </>\r\n//             :\r\n//             <h1>Loading...</h1>\r\n//         }\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n    // const [city,setCity]=useState(null);\r\n    // const [search,setSearch]=useState(\"Karachi\");\r\n    // useEffect(()=>{\r\n    //     const fetchApi= async()=>{\r\n    //         const url =`http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=41e7ed6fb208d067b64d2de9d172b32c`;\r\n    //         const response = await fetch(url);\r\n    //         const resJson = await response.json();\r\n    //         console.log(resJson)\r\n    //         setCity(resJson.main)\r\n    //     }\r\n    //     fetchApi();\r\n    // },[search])\r\n    // return(\r\n    //     <>\r\n    //     <div className=\"box\">\r\n    //         <div className=\"inputData\">\r\n    //             <input\r\n    //             type=\"search\"\r\n    //             className=\"inputField\"\r\n    //             onChange={(event)=>{\r\n    //                 setSearch(event.target.value)\r\n    //             }}/>\r\n    //         </div>\r\n    //     </div>\r\n    //     { !city ? (\r\n    //         <p>Not Data Found</p>\r\n    //     ):(\r\n    //         <div className=\"info\">\r\n    //             <h2 className=\"location\">\r\n    //             <i className=\"fas fa-street-view\"></i>{search}\r\n    //             </h2>\r\n    //             <h1 className=\"temp\">\r\n    //                 {city.temp}°Cel\r\n    //             </h1>\r\n    //             <h3 className=\"tempmin_max\">Min: {city.temp}°Cel  | Max: {city.temp}°Cel</h3>\r\n    //         </div>\r\n    //     )\r\n    //     }\r\n    //     </>\r\n    // )\r\n\r\n\r\n    function Tempapp() {\r\n      const [weather, setweather] = useState(null)\r\n      const cityName = useRef(null);\r\n      const [location, setLocation] = useState(null)\r\n      const [submit, setSubmit] = useState(false)\r\n      useEffect(() => {    \r\n        let name = \"\";    \r\n        if (cityName.current.value) {\r\n          name = `q=${cityName.current.value}`\r\n        } else if (location) {\r\n          if (!location) {\r\n          } else if (location === \"fail\") {\r\n            name = \"q=Pakistan\";\r\n          } else if (location && location.latitude) {\r\n            name = `lat=${location.latitude}&lon=${location.longitude}`\r\n          }\r\n        }\r\n        console.log(\"name: \", name)\r\n        if (name) {\r\n          axios.get(`https://api.openweathermap.org/data/2.5/weather?${name}&appid=363a0329911c1b074081245aae1023c3&units=metric`)\r\n            .then(res => {\r\n              const newWeather = res.data;\r\n              setweather(newWeather);\r\n            });\r\n        }\r\n      }, [submit, location]);\r\n      useEffect(() => {\r\n        function getLocation() {\r\n          if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n              console.log(\"position got: \", position.coords.latitude);\r\n              // console.log(\"position got: \", position.coords.longitude);\r\n              setLocation({\r\n                latitude: position.coords.latitude,\r\n                longitude: position.coords.longitude\r\n              })\r\n            }, function (error) {\r\n              setLocation(\"fail\")\r\n            });\r\n          } else {\r\n            console.log(\"Geolocation is not supported by this browser.\");\r\n          }\r\n        }\r\n        getLocation()\r\n      }, []);\r\n      return (\r\n        <div className={ (weather?.weather[0].main =='Rain')? \"rain main_div col-md-5\" :(weather?.weather[0].main =='Thunderstorm')? \"thunderStorm main_div col-md-5\" : (weather?.weather[0].main =='Haze')?\"Haze main_div col-md-5\" :(weather?.weather[0].main =='Clouds')?\"Cloud main_div col-md-5\" :(weather?.weather[0].main =='Smoke')? \"Smoke main_div col-md-5\": \"Clear main_div col-md-5\"}>\r\n          <h2>Weather App</h2>\r\n          <input ref={cityName} className='input' placeholder='City Name'/>\r\n          <button onClick={() => {\r\n            console.log(\"name: \", cityName.current.value)\r\n            setSubmit(!submit)\r\n          }} className='btn'>Submit</button>\r\n          <br />\r\n          {\r\n          (weather !== null) ?\r\n            <>\r\n              <div className=''>\r\n\r\n                  <h1>{weather.name}</h1>\r\n                  <h4>{weather?.weather[0].main}</h4>\r\n                  <h2>{weather?.main?.temp}°Cel</h2>\r\n                  <h4>{weather?.sys?.country}</h4><br/><br/>\r\n                  <div className=\"row weatherInformatin\">\r\n                  <div className=\"col-6\">\r\n                  <p className=\"para\">Wind Speed: {weather?.wind.speed}</p>\r\n                  <p className=\"para\">Max Temp: {weather?.main?.temp_max}°C</p>\r\n                  <p className=\"para\">Pressure: {weather?.main?.pressure}mbar</p>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                  <p className=\"para\">Feels Like: {weather?.main?.feels_like}°C</p>\r\n                  <p className=\"para\">Min Temp: {weather?.main?.temp_min}°C</p>\r\n                  <p className=\"para\">Humidity: {weather?.main?.humidity}</p>\r\n                  </div>\r\n                  </div>\r\n\r\n              </div>\r\n            </>\r\n            :\r\n            <h1>Loading...</h1>\r\n        }\r\n        </div>\r\n        \r\n      );\r\n    }\r\nexport default Tempapp;\r\n","import react from 'react';\nimport './App.css';\nimport Tempapp from './components/Tempapp';\n\nfunction App() {\n  return (\n    <Tempapp />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}